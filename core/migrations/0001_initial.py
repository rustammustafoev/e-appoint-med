# Generated by Django 4.1.7 on 2023-05-14 06:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='HospitalInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'hospital_inventory',
            },
        ),
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField()),
                ('height', models.FloatField()),
                ('bmi', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='user.patient')),
            ],
        ),
        migrations.CreateModel(
            name='MedicalTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'medical_test',
            },
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'medicine',
            },
        ),
        migrations.CreateModel(
            name='MedicineGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'medicine_group',
            },
        ),
        migrations.CreateModel(
            name='Pharmacy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'pharmacy',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('MON', 'Monday'), ('TUE', 'Tuesday'), ('WED', 'Wednesday'), ('THU', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday'), ('SUN', 'Sunday')], max_length=3)),
                ('from_time', models.TimeField()),
                ('to_time', models.TimeField()),
                ('time_per_patient', models.PositiveSmallIntegerField()),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.doctor')),
            ],
            options={
                'db_table': 'schedule',
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('comments', models.TextField()),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.doctor')),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='medical_record', to='core.medicalrecord')),
                ('medicines', models.ManyToManyField(related_name='medicines', to='core.medicine')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.patient')),
                ('tests', models.ManyToManyField(related_name='tests', to='core.medicaltest')),
            ],
            options={
                'db_table': 'prescription',
            },
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('CASH', 'Via Cash'), ('CARD', 'Via Card')], default='CASH', max_length=4)),
                ('amount', models.PositiveIntegerField()),
                ('currency_type', models.CharField(choices=[('USD', 'US Dollars'), ('UZB', 'Uzbek Soums'), ('EUR', 'Euro')], default='USD', max_length=3)),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.patient')),
            ],
            options={
                'db_table': 'payment_history',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.patient')),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='MedicineInStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_price', models.PositiveIntegerField()),
                ('quantity', models.PositiveIntegerField()),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.hospitalinventory')),
                ('medicine', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.medicine')),
            ],
            options={
                'db_table': 'medicine_in_stock',
            },
        ),
        migrations.AddField(
            model_name='medicine',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.medicinegroup'),
        ),
        migrations.AddField(
            model_name='hospitalinventory',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='medicine_supplier', to='core.pharmacy'),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.patient')),
                ('scheduled_at', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='core.schedule')),
            ],
            options={
                'db_table': 'appointment',
            },
        ),
    ]
